<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-lazy-init="true">


    <description>Spring公共配置 </description>
    <util:properties id="dataSourceProps" location="classpath:system.properties" />

    <!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
    <context:component-scan base-package="com.demo">
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    <!-- 强制使用CGLIB代理 -->
    <!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->

    <!-- 数据源配置,使用druid数据库连接池 -->
     <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
           <property name="dir" value="META-INF/druid/wall/mysql" />
          <property name="truncateAllow" value="false" />
          <property name="multiStatementAllow" value="true" />
     </bean>
     <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
          <property name="dbType" value="mysql" />
          <property name="config" ref="wall-filter-config" />
      </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass-->
        <property name="driverClassName" value="#{dataSourceProps['jdbc.driver']}" />

        <!-- 基本属性 url、user、password -->
        <property name="url" value="#{dataSourceProps['jdbc.url']}" />
        <property name="username" value="#{dataSourceProps['jdbc.username']}" />
        <property name="password" value="#{dataSourceProps['jdbc.password']}" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="validationQuery" value="SELECT 'x'" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用）  -->
        <property name="poolPreparedStatements"
            value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize"
            value="20" />

        <!-- 配置监控统计拦截的filters -->
        <property name="filters" value="stat" />
          <property name="proxyFilters">
               <list>
                <ref bean="wall-filter" />
               </list>
          </property>
    </bean>

    <!-- Spring iBatis SqlMapClient -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <list>
                <!-- 表示在com.hoo目录下的任意包下的resultmap包目录中，以-resultmap.xml或-mapper.xml结尾所有文件 -->
                <value>classpath*:mapper/*.xml</value>
            </list>
        </property>
        <property name="configLocation" value="classpath:mybatis-config.xml" />
    </bean>

    <!-- 自动扫描mapper配置和dao映射，无需写mybatis-config.xml -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.demo.dao" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>

</beans>
